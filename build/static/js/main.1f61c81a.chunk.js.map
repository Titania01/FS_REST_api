{"version":3,"sources":["components/Filter.jsx","components/Person.jsx","components/PersonForm.jsx","components/Notification.jsx","services/phones.js","App.jsx","index.js"],"names":["Filter","everything","handleEverything","value","onChange","Person","persons","handleDeliete","map","person","personIndex","name","number","onClick","e","window","confirm","id","handleDelete","PersonForm","addPerson","newNumber","handleNewNumber","newName","handleNewName","onSubmit","type","Notification","message","className","baseUrl","create","newObject","axios","post","App","useState","setPersons","setNewName","setNewNumber","query","setQuery","setMessage","useEffect","get","then","response","data","filteredPersons","filter","trim","toLowerCase","indexOf","contactToShow","length","target","event","preventDefault","console","log","existingUser","find","put","phones","res","setTimeout","concat","catch","err","payload","errors","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f61c81a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ everything, handleEverything }) => {\n  return (\n    <div>\n      Filter shown with: <input value= {everything} onChange={handleEverything} /> \n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Person = ({persons, handleDeliete}) => {\n  \n  const handleDelete = person => {\n    if(window.confirm(`Delete ${person.name}?`)) handleDeliete(person.id)\n  }\n\n  return (\n    <div>\n       <h2>Numbers</h2>\n      {persons.map((person,personIndex) => (\n        <p key={personIndex}>\n          {person.name} {person.number} \n          <button onClick={(e) => handleDelete(person)}>delete</button>\n        </p> \n      ))\n      } {\" \"}\n    </div>\n  )\n}\n\nexport default Person\n","import React from 'react'\n\nconst PersonForm = ({\n  addPerson,\n  newNumber,\n  handleNewNumber,\n  newName,\n  handleNewName\n}) => {\n  return (\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNewName} />\n        </div>\n        <br/>\n        <div>\n          number: <input value={newNumber} onChange={handleNewNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    \n  )\n}\n\nexport default PersonForm\n","const Notification = ({ message }) => {\n  if (message === null) {\n    return message\n  }\n\n  return (\n    <div className='message'>\n      {message}\n    </div>\n  )\n}\nexport default Notification","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons';\n\nexport const getAll = () => {\n  return axios.get(baseUrl)\n};\n\nexport const create = (newObject) => {\n  return axios.post(baseUrl, newObject)\n};\n\nexport const remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport const changePerson = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}","import React, { useState, useEffect } from 'react'\nimport Filter from \"./components/Filter\"\nimport Person from \"./components/Person\"\nimport PersonForm from \"./components/PersonForm\"\nimport Notification from \"./components/Notification\"\nimport \"./index.css\"\n\nimport * as phones from \"./services/phones\"\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [query, setQuery] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    phones.getAll().then((response)=> {\n      setPersons(response.data)\n      setNewNumber(response.data)    \n    })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    console.log('im here',{persons});\n    if (!newName.trim()) return null;\n    \n    const existingUser = persons.find(\n      (person) =>\n        (person.name).toLowerCase().trim() === newName.toLowerCase() \n      );\n      \n        if(existingUser) {\n          if(window.confirm (\n            `${newName} is already added to phonebook, replace the old number with a new one?`\n          )\n        ){\n          const id = existingUser.id;\n          phones\n            .changePerson(id, {\n              name: existingUser.name,\n              number: newNumber.trim()\n            })\n            .then((res) => {\n              setPersons((persons) => \n                persons.map((person) => {\n                  if(person.id === res.data.id) person.number = res.data.number;\n                  return person;\n                })\n              );\n              setNewName(\"\");\n              setNewNumber(\"\");\n              return null;\n            });\n            \n        }\n    const newObject = { name: newName.trim(), number: newNumber.trim()}\n    phones.create(newObject).then((res) => {\n      setPersons([...persons, res.data])\n      setMessage(`updated ${newName}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000);\n      setNewName(\"\");\n      setNewNumber(\"\");\n    })\n      }\n      else{\n        phones.create({name:newName,number:newNumber})\n        .then(({data}) => {\n          setPersons(persons.concat(data))\n          setMessage(`Added ${newName}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000);\n        })\n        .catch(err =>{\n          setMessage(err.response.data.payload.errors.name.message)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000);\n        })\n      }\n\n  };\n\n  const filteredPersons = persons.filter(person => person.name?.trim().toLowerCase().indexOf(query.trim().toLowerCase()) > -1)\n  \n  const contactToShow = query.trim().length ? filteredPersons : persons\n\n  const handleDeliete = (id) => {\n    setPersons(contactToShow.filter(p => p.id!==id))\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      { message && <Notification message={message}/> }\n      <Filter everything={query} handleEverything={e => setQuery(e.target.value)} />\n      <h3>Add a new</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNewName={e => setNewName(e.target.value)}\n        handleNewNumber={e => setNewNumber(e.target.value)}\n        />\n      <Person persons={contactToShow} handleDeliete={handleDeliete}  />  \n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}