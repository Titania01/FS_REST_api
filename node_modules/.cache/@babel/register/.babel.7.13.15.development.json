{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/badmus/workspace/projects/fullstackopen-ex/part3/FS_REST_api/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/badmus/workspace/projects/fullstackopen-ex/part3/FS_REST_api\",\"filename\":\"/home/badmus/workspace/projects/fullstackopen-ex/part3/FS_REST_api/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/badmus/workspace/projects/fullstackopen-ex/part3/FS_REST_api\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/badmus/workspace/projects/fullstackopen-ex/part3/FS_REST_api/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/badmus/workspace/projects/fullstackopen-ex/part3/FS_REST_api",
      "filename": "/home/badmus/workspace/projects/fullstackopen-ex/part3/FS_REST_api/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/badmus/workspace/projects/fullstackopen-ex/part3/FS_REST_api",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/badmus/workspace/projects/fullstackopen-ex/part3/FS_REST_api/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/badmus/workspace/projects/fullstackopen-ex/part3/FS_REST_api/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/badmus/workspace/projects/fullstackopen-ex/part3/FS_REST_api/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar app = (0, _express[\"default\"])();\n\nvar cors = require('cors');\n\napp.use(cors());\napp.disable('x-powered-by');\napp.use(_express[\"default\"].json());\n\n_morgan[\"default\"].token('data', function (req, res) {\n  return JSON.stringify(req.body);\n});\n\napp.use((0, _morgan[\"default\"])(':method :url :status :res[content-length] - :response-time ms :data'));\nvar persons = [{\n  id: 1,\n  name: 'Arto Hellas',\n  number: '040-123456'\n}, {\n  id: 2,\n  name: 'Ada Lovelace',\n  number: '39-56-334578'\n}, {\n  id: 3,\n  name: 'Dan Abramov',\n  number: '12-34-890763'\n}, {\n  id: 4,\n  name: 'Mary Poppendicek',\n  number: '23-67-123456'\n}]; // const generateId = (length=4) => Math.random().toString(36).substring(2,2+length)\n\nvar generateId = function generateId() {\n  return persons.length ? Math.max.apply(Math, (0, _toConsumableArray2[\"default\"])(persons.map(function (person) {\n    return person.id;\n  }))) + 1 : 1;\n};\n\napp.get('/', function (req, res) {\n  res.send('Hello world');\n});\napp.get('/api/persons', function (req, res) {\n  res.json(persons);\n});\napp.get('/info', function (req, res) {\n  res.send(\"<p>Phonebook has info for \".concat(persons.length, \" people</p> \\n  <h4>\").concat(new Date(), \"</h4>\\n  \"));\n});\napp.get('/api/persons/:id', function (req, res) {\n  var id = Number(req.params.id);\n  console.log(id);\n  var person = persons.find(function (person) {\n    return person.id === id;\n  });\n  console.log(person);\n  res.json(person);\n\n  if (person) {\n    res.json(person);\n  } else {\n    res.status(404).end();\n  }\n});\napp[\"delete\"]('/api/persons/:id', function (req, res) {\n  var id = parseInt(req.params.id);\n  persons = persons.filter(function (person) {\n    return person.id !== id;\n  });\n  res.status(204).end();\n});\napp.post('/api/persons', function (req, res) {\n  var _req$body = req.body,\n      name = _req$body.name,\n      number = _req$body.number;\n  if (!name || !number) return res.status(400).json({\n    error: \"name/number must be supplied!\"\n  });\n  var personExist = persons.some(function (person) {\n    return person.name.toLowerCase() === name.toLowerCase();\n  });\n  if (personExist) return res.status(409).json({\n    error: \"name must be unique\"\n  });\n  var newPerson = {\n    id: generateId(),\n    name: name,\n    number: number\n  };\n  persons = persons.concat(newPerson);\n  return res.json(newPerson);\n});\nvar PORT = process.env.PORT || 3001;\napp.listen(PORT, function () {\n  console.log(\"Server is running on port \".concat(PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsImNvcnMiLCJyZXF1aXJlIiwidXNlIiwiZGlzYWJsZSIsImV4cHJlc3MiLCJqc29uIiwibW9yZ2FuIiwidG9rZW4iLCJyZXEiLCJyZXMiLCJKU09OIiwic3RyaW5naWZ5IiwiYm9keSIsInBlcnNvbnMiLCJpZCIsIm5hbWUiLCJudW1iZXIiLCJnZW5lcmF0ZUlkIiwibGVuZ3RoIiwiTWF0aCIsIm1heCIsIm1hcCIsInBlcnNvbiIsImdldCIsInNlbmQiLCJEYXRlIiwiTnVtYmVyIiwicGFyYW1zIiwiY29uc29sZSIsImxvZyIsImZpbmQiLCJzdGF0dXMiLCJlbmQiLCJwYXJzZUludCIsImZpbHRlciIsInBvc3QiLCJlcnJvciIsInBlcnNvbkV4aXN0Iiwic29tZSIsInRvTG93ZXJDYXNlIiwibmV3UGVyc29uIiwiY29uY2F0IiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUNBOztBQUNBLElBQU1BLEdBQUcsR0FBRywwQkFBWjs7QUFFQSxJQUFNQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUVBRixHQUFHLENBQUNHLEdBQUosQ0FBUUYsSUFBSSxFQUFaO0FBRUFELEdBQUcsQ0FBQ0ksT0FBSixDQUFZLGNBQVo7QUFDQUosR0FBRyxDQUFDRyxHQUFKLENBQVFFLG9CQUFRQyxJQUFSLEVBQVI7O0FBRUFDLG1CQUFPQyxLQUFQLENBQWEsTUFBYixFQUFxQixVQUFVQyxHQUFWLEVBQWVDLEdBQWYsRUFBb0I7QUFBRSxTQUFPQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUgsR0FBRyxDQUFDSSxJQUFuQixDQUFQO0FBQWdDLENBQTNFOztBQUVBYixHQUFHLENBQUNHLEdBQUosQ0FBUSx3QkFBTyxxRUFBUCxDQUFSO0FBR0EsSUFBSVcsT0FBTyxHQUFHLENBQ1o7QUFBRUMsRUFBQUEsRUFBRSxFQUFFLENBQU47QUFBU0MsRUFBQUEsSUFBSSxF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dXJjZVJvb3QiOiIvaG9tZS9iYWRtdXMvd29ya3NwYWNlL3Byb2plY3RzL2Z1bGxzdGFja29wZW4tZXgvcGFydDMvRlNfUkVTVF9hcGkvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmltcG9ydCBtb3JnYW4gZnJvbSAnbW9yZ2FuJ1xuY29uc3QgYXBwID0gZXhwcmVzcygpXG5cbmNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJylcblxuYXBwLnVzZShjb3JzKCkpXG5cbmFwcC5kaXNhYmxlKCd4LXBvd2VyZWQtYnknKVxuYXBwLnVzZShleHByZXNzLmpzb24oKSlcblxubW9yZ2FuLnRva2VuKCdkYXRhJywgZnVuY3Rpb24gKHJlcSwgcmVzKSB7IHJldHVybiBKU09OLnN0cmluZ2lmeShyZXEuYm9keSl9KVxuXG5hcHAudXNlKG1vcmdhbignOm1ldGhvZCA6dXJsIDpzdGF0dXMgOnJlc1tjb250ZW50LWxlbmd0aF0gLSA6cmVzcG9uc2UtdGltZSBtcyA6ZGF0YScpKVxuXG5cbmxldCBwZXJzb25zID0gW1xuICB7IGlkOiAxLCBuYW1lOiAnQXJ0byBIZWxsYXMnLCBudW1iZXI6ICcwNDAtMTIzNDU2JyB9LFxuICB7IGlkOiAyLCBuYW1lOiAnQWRhIExvdmVsYWNlJywgbnVtYmVyOiAnMzktNTYtMzM0NTc4JyB9LFxuICB7IGlkOiAzLCBuYW1lOiAnRGFuIEFicmFtb3YnLCBudW1iZXI6ICcxMi0zNC04OTA3NjMnIH0sXG4gIHsgaWQ6IDQsIG5hbWU6ICdNYXJ5IFBvcHBlbmRpY2VrJywgbnVtYmVyOiAnMjMtNjctMTIzNDU2J31cbl1cblxuLy8gY29uc3QgZ2VuZXJhdGVJZCA9IChsZW5ndGg9NCkgPT4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDIsMitsZW5ndGgpXG5jb25zdCBnZW5lcmF0ZUlkID0gKCkgPT4gcGVyc29ucy5sZW5ndGg/IE1hdGgubWF4KC4uLnBlcnNvbnMubWFwKHBlcnNvbiA9PiBwZXJzb24uaWQpKSArIDEgOiAxXG5cbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgICByZXMuc2VuZCgnSGVsbG8gd29ybGQnKVxufSlcblxuYXBwLmdldCgnL2FwaS9wZXJzb25zJywgKHJlcSwgcmVzKSA9PiB7XG4gIHJlcy5qc29uKHBlcnNvbnMpXG59KVxuXG5hcHAuZ2V0KCcvaW5mbycsIChyZXEsIHJlcykgPT4ge1xuICByZXMuc2VuZChgPHA+UGhvbmVib29rIGhhcyBpbmZvIGZvciAke3BlcnNvbnMubGVuZ3RofSBwZW9wbGU8L3A+IFxuICA8aDQ+JHtuZXcgRGF0ZSgpfTwvaDQ+XG4gIGApXG59KVxuXG5hcHAuZ2V0KCcvYXBpL3BlcnNvbnMvOmlkJywgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IGlkID0gTnVtYmVyKHJlcS5wYXJhbXMuaWQpXG4gIGNvbnNvbGUubG9nKGlkKVxuICBjb25zdCBwZXJzb24gPSBwZXJzb25zLmZpbmQocGVyc29uID0+IHBlcnNvbi5pZCA9PT0gaWQpXG4gIGNvbnNvbGUubG9nKHBlcnNvbilcbiAgcmVzLmpzb24ocGVyc29uKVxuXG4gIGlmIChwZXJzb24pIHtcbiAgICByZXMuanNvbihwZXJzb24pXG4gIH1lbHNlIHtcbiAgICByZXMuc3RhdHVzKDQwNCkuZW5kKClcbiAgfVxufSlcblxuYXBwLmRlbGV0ZSgnL2FwaS9wZXJzb25zLzppZCcsIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBpZCA9IHBhcnNlSW50KHJlcS5wYXJhbXMuaWQpXG4gIHBlcnNvbnMgPSBwZXJzb25zLmZpbHRlcihwZXJzb24gPT4gcGVyc29uLmlkICE9PSBpZClcbiAgcmVzLnN0YXR1cygyMDQpLmVuZCgpXG59KVxuXG5hcHAucG9zdCgnL2FwaS9wZXJzb25zJywocmVxLHJlcykgPT4ge1xuICBjb25zdCB7bmFtZSAsIG51bWJlcn0gPSByZXEuYm9keVxuICBpZighbmFtZSB8fCAhbnVtYmVyKSByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe2Vycm9yOlwibmFtZS9udW1iZXIgbXVzdCBiZSBzdXBwbGllZCFcIn0pXG4gIGNvbnN0IHBlcnNvbkV4aXN0ID0gcGVyc29ucy5zb21lKHBlcnNvbiA9PiBwZXJzb24ubmFtZS50b0xvd2VyQ2FzZSgpPT09bmFtZS50b0xvd2VyQ2FzZSgpKVxuICBpZihwZXJzb25FeGlzdCkgcmV0dXJuIHJlcy5zdGF0dXMoNDA5KS5qc29uKHtlcnJvcjpcIm5hbWUgbXVzdCBiZSB1bmlxdWVcIn0pXG4gIGNvbnN0IG5ld1BlcnNvbiA9IHtcbiAgICBpZDpnZW5lcmF0ZUlkKCksXG4gICAgbmFtZSxcbiAgICBudW1iZXJcbiAgfVxuICBcbiAgcGVyc29ucyA9IHBlcnNvbnMuY29uY2F0KG5ld1BlcnNvbilcbiAgcmV0dXJuIHJlcy5qc29uKG5ld1BlcnNvbilcblxufSlcbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDFcblxuYXBwLmxpc3RlbihQT1JULCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coYFNlcnZlciBpcyBydW5uaW5nIG9uIHBvcnQgJHtQT1JUfWApXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "cors",
        "require",
        "use",
        "disable",
        "express",
        "json",
        "morgan",
        "token",
        "req",
        "res",
        "JSON",
        "stringify",
        "body",
        "persons",
        "id",
        "name",
        "number",
        "generateId",
        "length",
        "Math",
        "max",
        "map",
        "person",
        "get",
        "send",
        "Date",
        "Number",
        "params",
        "console",
        "log",
        "find",
        "status",
        "end",
        "parseInt",
        "filter",
        "post",
        "error",
        "personExist",
        "some",
        "toLowerCase",
        "newPerson",
        "concat",
        "PORT",
        "process",
        "env",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/home/badmus/workspace/projects/fullstackopen-ex/part3/FS_REST_api/",
      "sourcesContent": [
        "import express from 'express'\nimport morgan from 'morgan'\nconst app = express()\n\nconst cors = require('cors')\n\napp.use(cors())\n\napp.disable('x-powered-by')\napp.use(express.json())\n\nmorgan.token('data', function (req, res) { return JSON.stringify(req.body)})\n\napp.use(morgan(':method :url :status :res[content-length] - :response-time ms :data'))\n\n\nlet persons = [\n  { id: 1, name: 'Arto Hellas', number: '040-123456' },\n  { id: 2, name: 'Ada Lovelace', number: '39-56-334578' },\n  { id: 3, name: 'Dan Abramov', number: '12-34-890763' },\n  { id: 4, name: 'Mary Poppendicek', number: '23-67-123456'}\n]\n\n// const generateId = (length=4) => Math.random().toString(36).substring(2,2+length)\nconst generateId = () => persons.length? Math.max(...persons.map(person => person.id)) + 1 : 1\n\napp.get('/', (req, res) => {\n    res.send('Hello world')\n})\n\napp.get('/api/persons', (req, res) => {\n  res.json(persons)\n})\n\napp.get('/info', (req, res) => {\n  res.send(`<p>Phonebook has info for ${persons.length} people</p> \n  <h4>${new Date()}</h4>\n  `)\n})\n\napp.get('/api/persons/:id', (req, res) => {\n  const id = Number(req.params.id)\n  console.log(id)\n  const person = persons.find(person => person.id === id)\n  console.log(person)\n  res.json(person)\n\n  if (person) {\n    res.json(person)\n  }else {\n    res.status(404).end()\n  }\n})\n\napp.delete('/api/persons/:id', (req, res) => {\n  const id = parseInt(req.params.id)\n  persons = persons.filter(person => person.id !== id)\n  res.status(204).end()\n})\n\napp.post('/api/persons',(req,res) => {\n  const {name , number} = req.body\n  if(!name || !number) return res.status(400).json({error:\"name/number must be supplied!\"})\n  const personExist = persons.some(person => person.name.toLowerCase()===name.toLowerCase())\n  if(personExist) return res.status(409).json({error:\"name must be unique\"})\n  const newPerson = {\n    id:generateId(),\n    name,\n    number\n  }\n  \n  persons = persons.concat(newPerson)\n  return res.json(newPerson)\n\n})\nconst PORT = process.env.PORT || 3001\n\napp.listen(PORT, () => {\n    console.log(`Server is running on port ${PORT}`)\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1619227114350
  }
}